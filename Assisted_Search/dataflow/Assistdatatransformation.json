{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Scrapeddata",
						"type": "DatasetReference"
					},
					"name": "Scrapeddata"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Parquet1",
						"type": "DatasetReference"
					},
					"name": "AssistSink",
					"rejectedDataLinkedService": {
						"referenceName": "AzureDataLakeStorage1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "FilterEmptyRows"
				},
				{
					"name": "DuplicateCounter"
				},
				{
					"name": "Deduplication"
				}
			],
			"scriptLines": [
				"source(output(",
				"          {Document ID} as string,",
				"          {Document Title} as string,",
				"          {Content Summary} as string,",
				"          Category as string,",
				"          URL as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Scrapeddata",
				"Scrapeddata filter(!isNull({Document ID}) && {Document ID} != '' &&",
				"!isNull({Document Title}) && {Document Title} != '' &&",
				"!isNull({Content Summary}) && {Content Summary} != '' &&",
				"!isNull({Category}) && {Category} != '' &&",
				"!isNull({URL}) && {URL} != ''",
				") ~> FilterEmptyRows",
				"FilterEmptyRows aggregate(groupBy({Document ID}),",
				"     RowCount = count({Document ID})) ~> DuplicateCounter",
				"DuplicateCounter filter(RowCount > 1) ~> Deduplication",
				"Deduplication sink(allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> AssistSink"
			]
		}
	}
}